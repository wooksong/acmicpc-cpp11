#include <iostream>
#include <vector>

constexpr int MAX_LEN_SEQ = 1001;

int dp[MAX_LEN_SEQ];

int binary_search(int s, int e, int n);

int main() {
    std::vector<int> seq;
    int len_seq;
    int dp_len;

    // freopen("input.txt", "r", stdin);

    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cin >> len_seq;
    seq = std::vector<int>(len_seq);

    for (int i = 0; i < len_seq; ++i) {
        std::cin >> seq[i];
    }

    dp_len = 1;
    dp[dp_len] = seq[0];

    for (int i = 1; i < len_seq; ++i) {
        int ret = binary_search(1, (dp_len + 1), seq[i]);

        if (ret == -1) {
            dp_len++;
            dp[dp_len] = seq[i];
        } else {
            dp[ret] = seq[i];
        }
    }

    std::cout << dp_len << "\n";

    return 0;
}

int binary_search(int s, int e, int n) {
    int m = (s + e) / 2;
    int ret = -1;

    if (s > e) {
        return -1;
    }

    if ((dp[m - 1] < n) && (dp[m] >= n)) {
        return m;
    }

    if (dp[m] >= n) {
        return binary_search(s, m - 1, n);
    } else {
        return binary_search(m + 1, e, n);
    }

    return ret;
}
